plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.security:spring-security-crypto"
	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'com.nimbusds:nimbus-jose-jwt:9.30.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-config:4.0.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.1'
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.0'


	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
